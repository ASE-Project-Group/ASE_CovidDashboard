// Generated by Selenium IDE
const {Builder, By, Key, until} = require('selenium-webdriver');
const assert = require('assert');

describe('Dashboard_Basic_Test', function() {
  this.timeout(30000);
  let driver;
  let vars;
  // tslint:disable-next-line:only-arrow-functions
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build();
    vars = {};
  });
  // tslint:disable-next-line:only-arrow-functions
  afterEach(async function() {
    await driver.quit();
  });
  // tslint:disable-next-line:only-arrow-functions
  it('Dashboard_Basic_Test', async function() {
    await driver.get('http://localhost:4200/overview');
    await driver.manage().window().setRect(1050, 660);
    {
      const element = await driver.findElement(By.linkText('Map view'));
      await driver.actions({bridge: true}).moveToElement(element).perform();
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, 'body');
      await driver.actions({bridge: true}).moveToElement(element, 0, 0).perform();
    }
    await driver.executeScript('window.scrollTo(0,0)');
    await driver.findElement(By.css('.display-1')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.id('p-panel-0-titlebar')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.p-panel-content')).click();
    assert(await driver.findElement(By.css('.p-panel-content > .ng-tns-c52-0:nth-child(1)')).getText() == 'This Website was developed as part of our Advanced Software Engineering Project and should give you a nice overview of the current pandemic situation.');
    await driver.findElement(By.css('.ng-tns-c52-0:nth-child(5)')).click();
    await driver.findElement(By.css('.overview > .display-3')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.card-style-active .p-card-body')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.p-col-3:nth-child(2) .p-card-title')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.p-col-3:nth-child(3) .p-card-title')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.p-col-3:nth-child(4) .p-card-title')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('.card-style-active .p-card-content')).click();
    assert(await driver.findElement(By.css('.card-style-active .p-card-content')).getText() == '20722');
    await driver.findElement(By.css('.p-col-3:nth-child(2) .p-card-body')).click();
    assert(await driver.findElement(By.css('.p-col-3:nth-child(2) .p-card-content')).getText() == '413239');
    await driver.findElement(By.css('.p-col-3:nth-child(3) .p-card-content')).click();
    assert(await driver.findElement(By.css('.p-col-3:nth-child(3) .p-card-content')).getText() == '7749');
    await driver.findElement(By.css('.p-col-3:nth-child(4) .p-card-body')).click();
    assert(await driver.findElement(By.css('.p-col-3:nth-child(4) .p-card-content')).getText() == '384768');
    await driver.executeScript('window.scrollTo(0,0)');
    await driver.findElement(By.css('.app-comparison-chart .p-col-12:nth-child(1)')).click();
    assert(await driver.findElement(By.css('.p-col-12 > .data-info')).getText() == 'The number of tested persons and the hospitalization data is only available for provinces, not for districts. If you choose districts, the numbers will be zero. The hospitalization data for provinces is available from April 1st. All values before that date are zero.');
    await driver.findElement(By.id('p-tabpanel-3-label')).click();
    await driver.findElement(By.css('app-hospital-utilization .p-mb-2:nth-child(1) .p-radiobutton-box')).click();
    await driver.findElement(By.id('p-tabpanel-5-label')).click();
    await driver.findElement(By.css('app-age-sex-distribution-chart .p-mb-2:nth-child(2) .p-radiobutton-box')).click();
    await driver.findElement(By.css('.p-col-12 > .display-3')).click();
    assert(await driver.getTitle() == 'covid-19-dashboard');
    await driver.findElement(By.css('app-table > .p-grid')).click();
    assert(await driver.findElement(By.css('.p-grid > .data-info')).getText() == 'The hospitalization data is only available for provinces, not for districts. The hospitalization data for provinces is available from April 1st.');
    await driver.findElement(By.css('.p-component:nth-child(2)')).click();
    {
      const element = await driver.findElement(By.css('.p-component:nth-child(2)'));
      assert(await element.isEnabled());
    }
    await driver.findElement(By.css('app-age-sex-distribution-chart .p-mb-2:nth-child(3) .p-radiobutton-box')).click();
    await driver.findElement(By.css('.p-col-4:nth-child(3) .p-button-label')).click();
    {
      const element = await driver.findElement(By.css('.p-col-4:nth-child(3) .p-button-label'));
      await driver.actions({bridge: true}).moveToElement(element).perform();
    }
    {
      const element = await driver.findElement(By.CSS_SELECTOR, 'body');
      await driver.actions({bridge: true}).moveToElement(element, 0, 0).perform();
    }
  });
});
